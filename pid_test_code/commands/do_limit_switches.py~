# vim: set sw=4 noet ts=4 fileencoding=utf-8:

import wpilib
from wpilib.command import Command
from wpilib import DigitalInput

# Command-based approach to limit switches
class Do_Limit_Switches(Command):
	def __init__(self, robot):
		super().__init__()
		'''
		self.limit_switch = wpilib.DigitalInput(8)
		
		
		# inherited subsystems

		# uses DIO port 8
		'''
		Limit Switches can only be in two states:
			1: Limit Switch is pressed; return True
			2: Limit Switch not pressed; return False

		'''
		
	def initialize(self):
		print ("limit_switch initialized")

	def execute(self):
		# move to initialize when limit switches are implemented 
		# and replace timeout
		print(self.limit_switch.get())

	def isFinished(self):
		if not self.limit_switch.get():
			return True
		print ("limit switch pressed")

	def end(self):
		print ("limit_switch end!")

	def interrupted(self):
		print("Command 'limit_switch' interrupted!")		
		self.end()
		'''
